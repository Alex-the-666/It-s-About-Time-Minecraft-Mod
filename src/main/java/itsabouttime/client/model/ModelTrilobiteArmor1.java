// Date: 9/11/2014 6:31:16 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package itsabouttime.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelBiped;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelTrilobiteArmor1 extends ModelBiped
{
  //fields

    ModelRenderer TrilobiteHead;
    ModelRenderer FrontalTrilobiteHead;
    ModelRenderer RightTrilobiteHead;
    ModelRenderer LeftTrilobiteHead;
    ModelRenderer TrilobiteRightSpike;
    ModelRenderer TrilobiteLeftSpike;
    ModelRenderer TrilobiteBack1;
    ModelRenderer TrilobiteBack2;
    ModelRenderer TrilobiteBack3;
    ModelRenderer TrilobiteBack4;
    ModelRenderer TrilobiteBack5;
    ModelRenderer TrilobiteBack6;
    ModelRenderer Antenna1;
    ModelRenderer Antenna2;
  
  public ModelTrilobiteArmor1(float f)
  {
	  super(f,0,64,128);
    textureWidth = 64;
    textureHeight = 128;
    
    
      TrilobiteHead = new ModelRenderer(this, 0, 33);
      TrilobiteHead.addBox(-2F, -10F, -3F, 4, 2, 4);
      TrilobiteHead.setRotationPoint(0F, 0F, 0F);
      TrilobiteHead.setTextureSize(64, 128);
      TrilobiteHead.mirror = true;
      setRotation(TrilobiteHead, 0F, 0F, 0F);
      FrontalTrilobiteHead = new ModelRenderer(this, 0, 40);
      FrontalTrilobiteHead.addBox(-3F, -9F, -4F, 6, 1, 1);
      FrontalTrilobiteHead.setRotationPoint(0F, 0F, 0F);
      FrontalTrilobiteHead.setTextureSize(64, 128);
      FrontalTrilobiteHead.mirror = true;
      setRotation(FrontalTrilobiteHead, 0F, 0F, 0F);
      RightTrilobiteHead = new ModelRenderer(this, 0, 43);
      RightTrilobiteHead.addBox(-4F, -9F, -3F, 2, 1, 4);
      RightTrilobiteHead.setRotationPoint(0F, 0F, 0F);
      RightTrilobiteHead.setTextureSize(64, 128);
      RightTrilobiteHead.mirror = true;
      setRotation(RightTrilobiteHead, 0F, 0F, 0F);
      LeftTrilobiteHead = new ModelRenderer(this, 13, 43);
      LeftTrilobiteHead.addBox(2F, -9F, -3F, 2, 1, 4);
      LeftTrilobiteHead.setRotationPoint(0F, 0F, 0F);
      LeftTrilobiteHead.setTextureSize(64, 128);
      LeftTrilobiteHead.mirror = true;
      setRotation(LeftTrilobiteHead, 0F, 0F, 0F);
      TrilobiteRightSpike = new ModelRenderer(this, 0, 49);
      TrilobiteRightSpike.addBox(-4F, -9F, 1F, 1, 1, 3);
      TrilobiteRightSpike.setRotationPoint(0F, 0F, 0F);
      TrilobiteRightSpike.setTextureSize(64, 128);
      TrilobiteRightSpike.mirror = true;
      setRotation(TrilobiteRightSpike, 0F, -0.6692116F, 0F);
      TrilobiteLeftSpike = new ModelRenderer(this, 0, 49);
      TrilobiteLeftSpike.addBox(3F, -9F, 1F, 1, 1, 3);
      TrilobiteLeftSpike.setRotationPoint(0F, 0F, 0F);
      TrilobiteLeftSpike.setTextureSize(64, 128);
      TrilobiteLeftSpike.mirror = true;
      setRotation(TrilobiteLeftSpike, 0F, 0.6692116F, 0F);
      TrilobiteBack1 = new ModelRenderer(this, 0, 54);
      TrilobiteBack1.addBox(-3.5F, -10F, -0.8F, 7, 2, 3);
      TrilobiteBack1.setRotationPoint(0F, 0F, 0F);
      TrilobiteBack1.setTextureSize(64, 128);
      TrilobiteBack1.mirror = true;
      setRotation(TrilobiteBack1, -0.1745329F, 0F, 0F);
      TrilobiteBack2 = new ModelRenderer(this, 0, 60);
      TrilobiteBack2.addBox(-3F, -9F, -3F, 6, 1, 3);
      TrilobiteBack2.setRotationPoint(0F, 0F, 0F);
      TrilobiteBack2.setTextureSize(64, 128);
      TrilobiteBack2.mirror = true;
      setRotation(TrilobiteBack2, -0.699528F, 0F, 0F);
      TrilobiteBack3 = new ModelRenderer(this, 0, 60);
      TrilobiteBack3.addBox(-3F, -8.5F, -3F, 6, 1, 3);
      TrilobiteBack3.setRotationPoint(0F, 0F, 0F);
      TrilobiteBack3.setTextureSize(64, 128);
      TrilobiteBack3.mirror = true;
      setRotation(TrilobiteBack3, -0.699528F, 0F, 0F);
      TrilobiteBack4 = new ModelRenderer(this, 0, 65);
      TrilobiteBack4.addBox(-2.5F, -6.5F, 4.5F, 5, 3, 1);
      TrilobiteBack4.setRotationPoint(0F, 0F, 0F);
      TrilobiteBack4.setTextureSize(64, 128);
      TrilobiteBack4.mirror = true;
      setRotation(TrilobiteBack4, 0F, 0F, 0F);
      TrilobiteBack5 = new ModelRenderer(this, 0, 70);
      TrilobiteBack5.addBox(-2F, -3.5F, 4.5F, 4, 2, 1);
      TrilobiteBack5.setRotationPoint(0F, 0F, 0F);
      TrilobiteBack5.setTextureSize(64, 128);
      TrilobiteBack5.mirror = true;
      setRotation(TrilobiteBack5, 0F, 0F, 0F);
      TrilobiteBack6 = new ModelRenderer(this, 0, 74);
      TrilobiteBack6.addBox(-1.5F, -1.5F, 4.5F, 3, 1, 1);
      TrilobiteBack6.setRotationPoint(0F, 0F, 0F);
      TrilobiteBack6.setTextureSize(64, 128);
      TrilobiteBack6.mirror = true;
      setRotation(TrilobiteBack6, 0F, 0F, 0F);
      Antenna1 = new ModelRenderer(this, 0, 77);
      Antenna1.addBox(-1F, -8.5F, -11F, 1, 0, 7);
      Antenna1.setRotationPoint(0F, 0F, 0F);
      Antenna1.setTextureSize(64, 128);
      Antenna1.mirror = true;
      setRotation(Antenna1, 0F, 0.2974216F, 0F);

      Antenna2 = new ModelRenderer(this, 0, 77);
      Antenna2.addBox(0F, -8.5F, -11F, 1, 0, 7);
      Antenna2.setRotationPoint(0F, 0F, 0F);
      Antenna2.setTextureSize(64, 128);
      Antenna2.mirror = true;
      setRotation(Antenna2, 0F, -0.3134437F, 0F);
      Antenna2.mirror = false;
      
     this.bipedHead.addChild(Antenna1);
      this.bipedHead.addChild(Antenna2);
      this.bipedHead.addChild(TrilobiteHead);
      this.bipedHead.addChild(FrontalTrilobiteHead);
      this.bipedHead.addChild(RightTrilobiteHead);
      this.bipedHead.addChild(LeftTrilobiteHead);
      this.bipedHead.addChild(TrilobiteRightSpike);
      this.bipedHead.addChild(TrilobiteLeftSpike);
      this.bipedHead.addChild(TrilobiteBack1);
      this.bipedHead.addChild(TrilobiteBack2);
      this.bipedHead.addChild(TrilobiteBack3);
      this.bipedHead.addChild(TrilobiteBack4);
      this.bipedHead.addChild(TrilobiteBack5);
      this.bipedHead.addChild(TrilobiteBack6);

  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
	  super.render(entity, f, f1, f2, f3, f4, f5); setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
   

    
  }

}

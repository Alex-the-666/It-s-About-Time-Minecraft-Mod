// Date: 10/17/2014 4:30:54 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package itsabouttime.client.model.prehistoric;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelAmmonite extends ModelBase
{
  //fields
    ModelRenderer Shell;
    ModelRenderer Head;
    ModelRenderer Neck;
    ModelRenderer Tentacle1;
    ModelRenderer Tentacle2;
    ModelRenderer Tentacle3;
    ModelRenderer Tentacle4;
    ModelRenderer Tentacle5;
    ModelRenderer Tentacle6;
    ModelRenderer Tentacle7;
    ModelRenderer Tentacle8;
  
  public ModelAmmonite()
  {
    textureWidth = 64;
    textureHeight = 64;
    
    Shell = new ModelRenderer(this, 20, 27);
    Shell.addBox(-2F, -6F, 0F, 4, 7, 7);
    Shell.setRotationPoint(0F, 11.8F, -5F);
    Shell.setTextureSize(64, 64);
    Shell.mirror = true;
    setRotation(Shell, 0F, 0F, 0F);
    Head = new ModelRenderer(this, 24, 12);
    Head.addBox(-1.5F, -1F, -4F, 3, 3, 4);
    Head.setRotationPoint(0F, 10.8F, -4F);
    Head.setTextureSize(64, 64);
    Head.mirror = true;
    setRotation(Head, -0.1858931F, 0F, 0F);
    Neck = new ModelRenderer(this, 24, 20);
    Neck.addBox(-1.5F, -1F, -4F, 3, 2, 4);
    Neck.setRotationPoint(0F, 7F, -3.5F);
    Neck.setTextureSize(64, 64);
    Neck.mirror = true;
    setRotation(Neck, 0.8331107F, 0F, 0F);
    Tentacle1 = new ModelRenderer(this, 25, 5);
    Tentacle1.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle1.setRotationPoint(-0.4F, 10.6F, -7F);
    Tentacle1.setTextureSize(64, 64);
    Tentacle1.mirror = true;
    setRotation(Tentacle1, 0F, 0.4461433F, 0F);
    Tentacle2 = new ModelRenderer(this, 25, 5);
    Tentacle2.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle2.setRotationPoint(-0.4F, 10F, -7F);
    Tentacle2.setTextureSize(64, 64);
    Tentacle2.mirror = true;
    setRotation(Tentacle2, -0.2974289F, 0.0872665F, -0.7853982F);
    Tentacle3 = new ModelRenderer(this, 25, 5);
    Tentacle3.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle3.setRotationPoint(0.4F, 10F, -7F);
    Tentacle3.setTextureSize(64, 64);
    Tentacle3.mirror = true;
    setRotation(Tentacle3, -0.2974289F, -0.0872665F, 0.7853982F);
    Tentacle4 = new ModelRenderer(this, 25, 5);
    Tentacle4.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle4.setRotationPoint(0.4F, 10.6F, -7F);
    Tentacle4.setTextureSize(64, 64);
    Tentacle4.mirror = true;
    setRotation(Tentacle4, 0F, -0.4461433F, 0F);
    Tentacle5 = new ModelRenderer(this, 25, 5);
    Tentacle5.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle5.setRotationPoint(0F, 10F, -7.2F);
    Tentacle5.setTextureSize(64, 64);
    Tentacle5.mirror = true;
    setRotation(Tentacle5, -0.4173299F, 0F, 0F);
    Tentacle6 = new ModelRenderer(this, 25, 5);
    Tentacle6.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle6.setRotationPoint(0.6F, 11.5F, -7.5F);
    Tentacle6.setTextureSize(64, 64);
    Tentacle6.mirror = true;
    setRotation(Tentacle6, 0.2230717F, -0.0872665F, -0.7853982F);
    Tentacle7 = new ModelRenderer(this, 25, 5);
    Tentacle7.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle7.setRotationPoint(-0.6F, 11.5F, -7.5F);
    Tentacle7.setTextureSize(64, 64);
    Tentacle7.mirror = true;
    setRotation(Tentacle7, 0.2230717F, 0.0872665F, 0.7853982F);
    Tentacle8 = new ModelRenderer(this, 25, 5);
    Tentacle8.addBox(-0.5F, -0.5F, -5F, 1, 1, 5);
    Tentacle8.setRotationPoint(0F, 11.5F, -7.2F);
    Tentacle8.setTextureSize(64, 64);
    Tentacle8.mirror = true;
    setRotation(Tentacle8, 0.2602503F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    Shell.render(f5);
    Head.render(f5);
    Neck.render(f5);
    Tentacle1.render(f5);
    Tentacle2.render(f5);
    Tentacle3.render(f5);
    Tentacle4.render(f5);
    Tentacle5.render(f5);
    Tentacle6.render(f5);
    Tentacle7.render(f5);
    Tentacle8.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    
    Tentacle8.rotateAngleX = 0.2F * MathHelper.sin(f2 * (float)0.35F + f1) + 0.2602503F;
    Tentacle5.rotateAngleX = -0.2F * MathHelper.sin(f2 * (float)0.35F + f1) - 0.4173299F;
    Tentacle1.rotateAngleY = 0.2F * MathHelper.sin(f2 * (float)0.35F + f1) + 0.4461433F;
    Tentacle4.rotateAngleY = -0.2F * MathHelper.sin(f2 * (float)0.35F + f1) - 0.4461433F;
    
    Tentacle3.rotateAngleX = -0.2F * MathHelper.sin(f2 * (float)0.35F + f1) -0.2974289F;
    Tentacle2.rotateAngleX = -0.2F * MathHelper.sin(f2 * (float)0.35F + f1) -0.2974289F;

    Tentacle6.rotateAngleX = 0.2F * MathHelper.sin(f2 * (float)0.35F + f1) +0.2974289F;
    Tentacle7.rotateAngleX = 0.2F * MathHelper.sin(f2 * (float)0.35F + f1) +0.2974289F;

  }

}

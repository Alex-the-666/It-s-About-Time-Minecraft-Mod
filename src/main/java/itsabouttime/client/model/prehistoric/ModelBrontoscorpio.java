// Date: 10/11/2014 8:16:12 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package itsabouttime.client.model.prehistoric;

import itsabouttime.common.entities.prehistoric.EntityBrontoscorpio;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.MathHelper;

public class ModelBrontoscorpio extends ModelBase
{
  //fields
    ModelRenderer Head;
    ModelRenderer Body;
    ModelRenderer Tail1;
    ModelRenderer Tail2;
    ModelRenderer Tail3;
    ModelRenderer Tail4;
    ModelRenderer Stinger1;
    ModelRenderer Stinger2;
    ModelRenderer Stinger3;
    ModelRenderer Eye2;
    ModelRenderer Eye1;
    ModelRenderer UnderBelly;
    ModelRenderer LeftLeg4;
    ModelRenderer LeftLeg3;
    ModelRenderer LeftLeg2;
    ModelRenderer LeftLeg1;
    ModelRenderer LeftLeg4P2;
    ModelRenderer LeftLeg3P2;
    ModelRenderer LeftLeg2P2;
    ModelRenderer LeftLeg1P2;
    ModelRenderer LeftArm1;
    ModelRenderer RightArm1;
    ModelRenderer LeftArm2;
    ModelRenderer RightArm2;
    ModelRenderer LeftClawBase;
    ModelRenderer RightClawBase;
    ModelRenderer LeftBigClaw;
    ModelRenderer LeftSmallClaw;
    ModelRenderer RightBigClaw;
    ModelRenderer RightSmallClaw;
    ModelRenderer RightLeg4;
    ModelRenderer RightLeg3;
    ModelRenderer RightLeg2;
    ModelRenderer RightLeg1;
    ModelRenderer RightLeg4P2;
    ModelRenderer RightLeg3P2;
    ModelRenderer RightLeg2P2;
    ModelRenderer RightLeg1P2;
    ModelRenderer smallclaws;
    ModelRenderer BackPack;
  
  public ModelBrontoscorpio()
  {
    textureWidth = 128;
    textureHeight = 64;
    
      Head = new ModelRenderer(this, 45, 51);
      Head.addBox(-3F, -2F, -5F, 6, 4, 5);
      Head.setRotationPoint(0F, 19F, -8F);
      Head.setTextureSize(128, 64);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Body = new ModelRenderer(this, 39, 0);
      Body.addBox(-4F, -2.5F, -2F, 8, 5, 15);
      Body.setRotationPoint(0F, 18.5F, -8F);
      Body.setTextureSize(128, 64);
      Body.mirror = true;
      setRotation(Body, 0.1745329F, 0F, 0F);

      Tail1 = new ModelRenderer(this, 0, 20);
      Tail1.addBox(-3F, -2.5F, 0F, 6, 5, 8);
      Tail1.setRotationPoint(0F, 18F, 2F);
      Tail1.setTextureSize(128, 64);
      Tail1.mirror = true;
      setRotation(Tail1, 0.3490659F, 0F, 0F);
      Tail1.mirror = false;
      Tail2 = new ModelRenderer(this, 0, 34);
      Tail2.addBox(-2.5F, -2F, 0F, 5, 4, 7);
      Tail2.setRotationPoint(0F, 16F, 9F);
      Tail2.setTextureSize(128, 64);
      Tail2.mirror = true;
      setRotation(Tail2, 0.6981317F, 0F, 0F);
      Tail3 = new ModelRenderer(this, 0, 46);
      Tail3.addBox(-2F, -2F, 0F, 4, 4, 7);
      Tail3.setRotationPoint(0F, 12F, 13.8F);
      Tail3.setTextureSize(128, 64);
      Tail3.mirror = true;
      setRotation(Tail3, 1.047198F, 0F, 0F);
      Tail4 = new ModelRenderer(this, 24, 47);
      Tail4.addBox(-1.5F, -1.5F, 0F, 3, 3, 7);
      Tail4.setRotationPoint(0F, 7.1F, 17F);
      Tail4.setTextureSize(128, 64);
      Tail4.mirror = true;
      setRotation(Tail4, 1.396263F, 0F, 0F);
      Stinger1 = new ModelRenderer(this, 25, 38);
      Stinger1.addBox(-2F, -3F, -3F, 4, 3, 5);
      Stinger1.setRotationPoint(0F, 1F, 18F);
      Stinger1.setTextureSize(128, 64);
      Stinger1.mirror = true;
      setRotation(Stinger1, 0F, 0F, 0F);
      Stinger2 = new ModelRenderer(this, 33, 32);
      Stinger2.addBox(-1F, -1F, -3F, 2, 2, 3);
      Stinger2.setRotationPoint(0F, -0.5F, 16F);
      Stinger2.setTextureSize(128, 64);
      Stinger2.mirror = true;
      setRotation(Stinger2, 0.5061455F, 0F, 0F);
      Stinger3 = new ModelRenderer(this, 35, 26);
      Stinger3.addBox(-1F, -3F, -1F, 2, 3, 2);
      Stinger3.setRotationPoint(0F, 1F, 14.4F);
      Stinger3.setTextureSize(128, 64);
      Stinger3.mirror = true;
      setRotation(Stinger3, 1.064651F, 0F, 0F);
      Eye2 = new ModelRenderer(this, 47, 61);
      Eye2.addBox(-1F, -1F, -1F, 2, 2, 1);
      Eye2.setRotationPoint(2.5F, 19F, -12.5F);
      Eye2.setTextureSize(128, 64);
      Eye2.mirror = true;
      setRotation(Eye2, 0F, 0F, 0F);
      Eye1 = new ModelRenderer(this, 40, 61);
      Eye1.addBox(-1F, -1F, -1F, 2, 2, 1);
      Eye1.setRotationPoint(-2.5F, 19F, -12.5F);
      Eye1.setTextureSize(128, 64);
      Eye1.mirror = true;
      setRotation(Eye1, 0F, 0F, 0F);
      UnderBelly = new ModelRenderer(this, 86, 0);
      UnderBelly.addBox(-3.5F, -1.5F, 0F, 7, 3, 14);
      UnderBelly.setRotationPoint(0F, 20F, -9F);
      UnderBelly.setTextureSize(128, 64);
      UnderBelly.mirror = true;
      setRotation(UnderBelly, 0F, 0F, 0F);
      LeftLeg4 = new ModelRenderer(this, 0, 0);
      LeftLeg4.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg4.setRotationPoint(3F, 20.70667F, 3.9F);
      LeftLeg4.setTextureSize(128, 64);
      LeftLeg4.mirror = true;
      setRotation(LeftLeg4, 0F, 0F, -0.5235988F);
      LeftLeg3 = new ModelRenderer(this, 0, 0);
      LeftLeg3.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg3.setRotationPoint(3F, 20.7F, 1F);
      LeftLeg3.setTextureSize(128, 64);
      LeftLeg3.mirror = true;
      setRotation(LeftLeg3, 0F, 0F, -0.5235988F);
      LeftLeg2 = new ModelRenderer(this, 0, 0);
      LeftLeg2.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg2.setRotationPoint(3F, 20.7F, -2F);
      LeftLeg2.setTextureSize(128, 64);
      LeftLeg2.mirror = true;
      setRotation(LeftLeg2, 0F, 0F, -0.5235988F);
      LeftLeg1 = new ModelRenderer(this, 0, 0);
      LeftLeg1.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg1.setRotationPoint(3F, 20.7F, -5F);
      LeftLeg1.setTextureSize(128, 64);
      LeftLeg1.mirror = true;
      setRotation(LeftLeg1, 0F, 0F, -0.5235988F);
      LeftLeg4P2 = new ModelRenderer(this, 0, 5);
      LeftLeg4P2.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg4P2.setRotationPoint(6.9F, 19.5F, 3.9F);
      LeftLeg4P2.setTextureSize(128, 64);
      LeftLeg4P2.mirror = true;
      setRotation(LeftLeg4P2, 0F, 0F, 1.047198F);
      LeftLeg3P2 = new ModelRenderer(this, 0, 5);
      LeftLeg3P2.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg3P2.setRotationPoint(6.9F, 19.5F, 1F);
      LeftLeg3P2.setTextureSize(128, 64);
      LeftLeg3P2.mirror = true;
      setRotation(LeftLeg3P2, 0F, 0F, 1.047198F);
      LeftLeg2P2 = new ModelRenderer(this, 0, 5);
      LeftLeg2P2.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg2P2.setRotationPoint(6.9F, 19.5F, -2F);
      LeftLeg2P2.setTextureSize(128, 64);
      LeftLeg2P2.mirror = true;
      setRotation(LeftLeg2P2, 0F, 0F, 1.047198F);
      LeftLeg1P2 = new ModelRenderer(this, 0, 5);
      LeftLeg1P2.addBox(0F, -1F, -1F, 5, 2, 2);
      LeftLeg1P2.setRotationPoint(6.9F, 19.5F, -5F);
      LeftLeg1P2.setTextureSize(128, 64);
      LeftLeg1P2.mirror = true;
      setRotation(LeftLeg1P2, 0F, 0F, 1.047198F);
      LeftArm1 = new ModelRenderer(this, 44, 28);
      LeftArm1.addBox(-1F, -1F, -8F, 2, 2, 8);
      LeftArm1.setRotationPoint(2F, 21F, -8F);
      LeftArm1.setTextureSize(128, 64);
      LeftArm1.mirror = true;
      setRotation(LeftArm1, 0.2617994F, -0.7853982F, 0F);
      RightArm1 = new ModelRenderer(this, 44, 28);
      RightArm1.addBox(-1F, -1F, -8F, 2, 2, 8);
      RightArm1.setRotationPoint(-2F, 21F, -8F);
      RightArm1.setTextureSize(128, 64);
      RightArm1.mirror = true;
      setRotation(RightArm1, 0.2617994F, 0.7853982F, 0F);
      LeftArm2 = new ModelRenderer(this, 65, 28);
      LeftArm2.addBox(-1F, -1F, -8F, 2, 2, 8);
      LeftArm2.setRotationPoint(7.4F, 23.1F, -12.8F);
      LeftArm2.setTextureSize(128, 64);
      LeftArm2.mirror = true;
      setRotation(LeftArm2, 0F, 0F, 0F);
      RightArm2 = new ModelRenderer(this, 65, 28);
      RightArm2.addBox(-1F, -1F, -8F, 2, 2, 8);
      RightArm2.setRotationPoint(-7.4F, 23.1F, -12.8F);
      RightArm2.setTextureSize(128, 64);
      RightArm2.mirror = true;
      setRotation(LeftArm2, 0F, 0F, 0F);
      LeftClawBase = new ModelRenderer(this, 78, 28);
      LeftClawBase.addBox(-1.5F, -1.5F, -3F, 3, 3, 3);
      LeftClawBase.setRotationPoint(7.4F, 23F, -20.8F);
      LeftClawBase.setTextureSize(128, 64);
      LeftClawBase.mirror = true;
      setRotation(LeftClawBase, 0F, 0F, 0F);
      RightClawBase = new ModelRenderer(this, 78, 28);
      RightClawBase.addBox(-1.5F, -1.5F, -3F, 3, 3, 3);
      RightClawBase.setRotationPoint(-7.4F, 23F, -20.8F);
      RightClawBase.setTextureSize(128, 64);
      RightClawBase.mirror = true;
      setRotation(RightClawBase, 0F, 0F, 0F);
      LeftBigClaw = new ModelRenderer(this, 91, 28);
      LeftBigClaw.addBox(-1F, -1.5F, -4F, 2, 3, 4);
      LeftBigClaw.setRotationPoint(8F, 23F, -23.8F);
      LeftBigClaw.setTextureSize(128, 64);
      LeftBigClaw.mirror = true;
      setRotation(LeftBigClaw, 0F, 0F, 0F);
      LeftSmallClaw = new ModelRenderer(this, 93, 36);
      LeftSmallClaw.addBox(-0.5F, -1F, -4F, 1, 2, 4);
      LeftSmallClaw.setRotationPoint(6.4F, 23F, -23.8F);
      LeftSmallClaw.setTextureSize(128, 64);
      LeftSmallClaw.mirror = true;
      setRotation(LeftSmallClaw, 0F, 0.2617994F, 0F);
      RightBigClaw = new ModelRenderer(this, 91, 28);
      RightBigClaw.addBox(-1F, -1.5F, -4F, 2, 3, 4);
      RightBigClaw.setRotationPoint(-8F, 23F, -23.8F);
      RightBigClaw.setTextureSize(128, 64);
      RightBigClaw.mirror = true;
      setRotation(RightBigClaw, 0F, 0F, 0F);
      RightSmallClaw = new ModelRenderer(this, 93, 36);
      RightSmallClaw.addBox(-0.5F, -1F, -4F, 1, 2, 4);
      RightSmallClaw.setRotationPoint(-6.4F, 23F, -23.8F);
      RightSmallClaw.setTextureSize(128, 64);
      RightSmallClaw.mirror = true;
      setRotation(RightSmallClaw, 0F, -0.2617994F, 0F);
      RightLeg4 = new ModelRenderer(this, 0, 10);
      RightLeg4.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg4.setRotationPoint(-3F, 20.7F, 3.9F);
      RightLeg4.setTextureSize(128, 64);
      RightLeg4.mirror = true;
      setRotation(RightLeg4, 0F, 0F, 0.5235988F);
      RightLeg3 = new ModelRenderer(this, 0, 10);
      RightLeg3.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg3.setRotationPoint(-3F, 20.7F, 1F);
      RightLeg3.setTextureSize(128, 64);
      RightLeg3.mirror = true;
      setRotation(RightLeg3, 0F, 0F, 0.5235988F);
      RightLeg2 = new ModelRenderer(this, 0, 10);
      RightLeg2.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg2.setRotationPoint(-3F, 20.7F, -2F);
      RightLeg2.setTextureSize(128, 64);
      RightLeg2.mirror = true;
      setRotation(RightLeg2, 0F, 0F, 0.5235988F);
      RightLeg1 = new ModelRenderer(this, 0, 10);
      RightLeg1.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg1.setRotationPoint(-3F, 20.7F, -5F);
      RightLeg1.setTextureSize(128, 64);
      RightLeg1.mirror = true;
      setRotation(RightLeg1, 0F, 0F, 0.5235988F);
      RightLeg4P2 = new ModelRenderer(this, 0, 15);
      RightLeg4P2.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg4P2.setRotationPoint(-6.9F, 19.5F, 3.9F);
      RightLeg4P2.setTextureSize(128, 64);
      RightLeg4P2.mirror = true;
      setRotation(RightLeg4P2, 0F, 0.017686F, -1.047198F);
      RightLeg3P2 = new ModelRenderer(this, 0, 15);
      RightLeg3P2.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg3P2.setRotationPoint(-6.9F, 19.5F, 1F);
      RightLeg3P2.setTextureSize(128, 64);
      RightLeg3P2.mirror = true;
      setRotation(RightLeg3P2, 0F, 0F, -1.047198F);
      RightLeg2P2 = new ModelRenderer(this, 0, 15);
      RightLeg2P2.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg2P2.setRotationPoint(-6.9F, 19.5F, -2F);
      RightLeg2P2.setTextureSize(128, 64);
      RightLeg2P2.mirror = true;
      setRotation(RightLeg2P2, 0F, 0F, -1.047198F);
      RightLeg1P2 = new ModelRenderer(this, 0, 15);
      RightLeg1P2.addBox(-5F, -1F, -1F, 5, 2, 2);
      RightLeg1P2.setRotationPoint(-6.9F, 19.5F, -5F);
      RightLeg1P2.setTextureSize(128, 64);
      RightLeg1P2.mirror = true;
      setRotation(RightLeg1P2, 0F, 0F, -1.047198F);
      smallclaws = new ModelRenderer(this, 36, 40);
      smallclaws.addBox(-5F, 0F, -10F, 10, 0, 10);
      smallclaws.setRotationPoint(0F, 20.8F, -12F);
      smallclaws.setTextureSize(128, 64);
      smallclaws.mirror = true;
      setRotation(smallclaws, 0.0872665F, 0F, 0F);
      BackPack = new ModelRenderer(this, 96, 53);
      BackPack.addBox(-4F, -3F, -4F, 8, 3, 8);
      BackPack.setRotationPoint(0F, 15F, -2.5F);
      BackPack.setTextureSize(128, 64);
      BackPack.mirror = true;
      setRotation(BackPack, 0.1745329F, 0F, 0F);
      
      convertToChild(LeftSmallClaw, LeftClawBase);
      convertToChild(LeftBigClaw, LeftClawBase);
      convertToChild(LeftClawBase, LeftArm2);
      convertToChild(LeftArm2, LeftArm1);
      
      convertToChild(RightSmallClaw, RightClawBase);
      convertToChild(RightBigClaw, RightClawBase);
      convertToChild(RightClawBase, RightArm2);
      convertToChild(RightArm2, RightArm1);
      
      convertToChild(Stinger3, Stinger2);
      convertToChild(Stinger2, Stinger1);
      convertToChild(Stinger1, Tail4);
      convertToChild(Tail4, Tail3);
      convertToChild(Tail3, Tail2);
      convertToChild(Tail2, Tail1);
      
      convertToChild(LeftLeg1P2, LeftLeg1);
      convertToChild(LeftLeg2P2, LeftLeg2);
      convertToChild(LeftLeg3P2, LeftLeg3);
      convertToChild(LeftLeg4P2, LeftLeg4);
     
      convertToChild(RightLeg1P2, RightLeg1);
      convertToChild(RightLeg2P2, RightLeg2);
      convertToChild(RightLeg3P2, RightLeg3);

  }





protected void convertToChild( ModelRenderer parChild,ModelRenderer parParent)
{
   
   parChild.rotationPointX -= parParent.rotationPointX;
   parChild.rotationPointY -= parParent.rotationPointY;
   parChild.rotationPointZ -= parParent.rotationPointZ;
   parChild.rotateAngleX -= parParent.rotateAngleX;
   parChild.rotateAngleY -= parParent.rotateAngleY;
   parChild.rotateAngleZ -= parParent.rotateAngleZ;
   parParent.addChild(parChild);
} 
public void setLivingAnimations(EntityLivingBase p_78086_1_, float p_78086_2_, float p_78086_3_, float p_78086_4_)
{
    EntityBrontoscorpio b = (EntityBrontoscorpio)p_78086_1_;

    

  	
  	  

}
public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
{
  super.render(entity, f, f1, f2, f3, f4, f5);
  setRotationAngles(f, f1, f2, f3, f4, f5, entity);
  Head.render(f5);
  Body.render(f5);
  
  Tail1.render(f5);
  
  Eye2.render(f5);
  Eye1.render(f5);
  UnderBelly.render(f5);
  
  LeftLeg4.render(f5);
  LeftLeg3.render(f5);
  LeftLeg2.render(f5);
  LeftLeg1.render(f5);
  
  RightLeg4.render(f5);
  RightLeg3.render(f5);
  RightLeg2.render(f5);
  RightLeg1.render(f5);
  
  LeftArm1.render(f5);
  RightArm1.render(f5);
  
  
  
  smallclaws.render(f5);
  BackPack.render(f5);
}
 
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.LeftLeg1.rotateAngleX = MathHelper.cos(f *0.6662F)   *0.6F  * f1;
    this.RightLeg1.rotateAngleX = MathHelper.sin(f   *0.6662F)  * 0.6F *  f1;
    
    this.LeftLeg2.rotateAngleX = MathHelper.sin(f   *0.6662F)  * 0.6F  * f1;
    this.RightLeg2.rotateAngleX = MathHelper.cos(f   *0.6662F) *  0.6F  * f1;
    
    this.LeftLeg3.rotateAngleX = MathHelper.cos(f   *0.6662F)   *0.6F   *f1;
    this.RightLeg3.rotateAngleX = MathHelper.sin(f  * 0.6662F) *  0.6F  * f1;
    
    this.LeftLeg4.rotateAngleX = MathHelper.sin(f  * 0.6662F)   *0.6F  * f1;
    this.RightLeg4.rotateAngleX = MathHelper.cos(f  * 0.6662F)  * 0.6F  * f1;

  }

}


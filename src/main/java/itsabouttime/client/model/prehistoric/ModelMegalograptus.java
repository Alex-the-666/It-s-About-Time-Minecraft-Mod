// Date: 9/13/2014 12:36:21 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package itsabouttime.client.model.prehistoric;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelMegalograptus  extends ModelBase
{
  //fields
    ModelRenderer head;
    ModelRenderer body1;
    ModelRenderer body2;
    ModelRenderer body3;
    ModelRenderer body4;
    ModelRenderer tail;
    ModelRenderer tail2;
    ModelRenderer LeftBackLeg1;
    ModelRenderer LeftBackLeg2;
    ModelRenderer LeftBackLeg3;
    ModelRenderer RightBackLeg1;
    ModelRenderer RightBackLeg2;
    ModelRenderer RightBackLeg3;
    ModelRenderer LeftMiddleLeg1;
    ModelRenderer RightMiddleLeg1;
    ModelRenderer LeftMiddleLeg2;
    ModelRenderer RightMiddleLeg2;
    ModelRenderer RightArm1;
    ModelRenderer LeftArm1;
    ModelRenderer RightArm2;
    ModelRenderer LeftArm2;
    ModelRenderer RightArm3;
    ModelRenderer LeftArm3;
    ModelRenderer RightArmthin;
    ModelRenderer LeftArmthin;
    ModelRenderer Anttena;
  
  public ModelMegalograptus ()
  {
    textureWidth = 64;
    textureHeight = 128;
    
      head = new ModelRenderer(this, 0, 0);
      head.addBox(-3F, -6F, -1F, 6, 6, 6);
      head.setRotationPoint(0F, 24F, -5F);
      head.setTextureSize(64, 128);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body1 = new ModelRenderer(this, 0, 17);
      body1.addBox(-3F, -3F, 0F, 6, 5, 5);
      body1.setRotationPoint(0F, 21.96F, 0F);
      body1.setTextureSize(64, 128);
      body1.mirror = true;
      setRotation(body1, 0F, 0F, 0F);
      body2 = new ModelRenderer(this, 0, 27);
      body2.addBox(-3.5F, -3F, 0F, 7, 5, 6);
      body2.setRotationPoint(0F, 22F, 5F);
      body2.setTextureSize(64, 128);
      body2.mirror = true;
      setRotation(body2, 0F, 0F, 0F);
      body3 = new ModelRenderer(this, 0, 38);
      body3.addBox(-3F, -3F, 6F, 6, 5, 5);
      body3.setRotationPoint(0F, 22F, 5F);
      body3.setTextureSize(64, 128);
      body3.mirror = true;
      setRotation(body3, 0F, 0F, 0F);
      body4 = new ModelRenderer(this, 0, 48);
      body4.addBox(-2.526667F, -1.953333F, 11F, 5, 4, 7);
      body4.setRotationPoint(0F, 22F, 5F);
      body4.setTextureSize(64, 128);
      body4.mirror = true;
      setRotation(body4, 0F, 0F, 0F);
      tail = new ModelRenderer(this, 0, 59);
      tail.addBox(-1F, -1F, 18F, 2, 2, 15);
      tail.setRotationPoint(0F, 22F, 5F);
      tail.setTextureSize(64, 128);
      tail.mirror = true;
      setRotation(tail, 0F, 0F, 0F);
      tail2 = new ModelRenderer(this, 0, 76);
      tail2.addBox(-4F, 0F, 20F, 8, 0, 9);
      tail2.setRotationPoint(0F, 22F, 5F);
      tail2.setTextureSize(64, 128);
      tail2.mirror = true;
      setRotation(tail2, 0F, 0F, 0F);
      LeftBackLeg1 = new ModelRenderer(this, 0, 85);
      LeftBackLeg1.addBox(0F, -2F, -1F, 8, 3, 3);
      LeftBackLeg1.setRotationPoint(2F, 23F, 1F);
      LeftBackLeg1.setTextureSize(64, 128);
      LeftBackLeg1.mirror = true;
      setRotation(LeftBackLeg1, 0F, -0.3665191F, 0F);
      LeftBackLeg2 = new ModelRenderer(this, 22, 85);
      LeftBackLeg2.addBox(5F, -2.1F, -6.2F, 8, 3, 3);
      LeftBackLeg2.setRotationPoint(2F, 23F, 1F);
      LeftBackLeg2.setTextureSize(64, 128);
      LeftBackLeg2.mirror = true;
      setRotation(LeftBackLeg2, 0F, -0.7853982F, 0F);
      LeftBackLeg3 = new ModelRenderer(this, 44, 81);
      LeftBackLeg3.addBox(11F, -2.5F, 5F, 3, 4, 6);
      LeftBackLeg3.setRotationPoint(2F, 23F, 1F);
      LeftBackLeg3.setTextureSize(64, 128);
      LeftBackLeg3.mirror = true;
      setRotation(LeftBackLeg3, 0F, 0F, 0F);
      RightBackLeg1 = new ModelRenderer(this, 0, 95);
      RightBackLeg1.addBox(-8F, -2F, -1F, 8, 3, 3);
      RightBackLeg1.setRotationPoint(-2F, 23F, 1F);
      RightBackLeg1.setTextureSize(64, 128);
      RightBackLeg1.mirror = true;
      setRotation(RightBackLeg1, 0F, 0.3665191F, 0F);
      /*RightBackLeg2 = new ModelRenderer(this, 22, 95);
      RightBackLeg2.addBox(-15F, -2.1F, -4.2F, 8, 3, 3);
      RightBackLeg2.setRotationPoint(-2F, 23F, 1F);
      RightBackLeg2.setTextureSize(64, 128);
      RightBackLeg2.mirror = true;
      setRotation(RightBackLeg2, 0F, 0.7853982F, 0F);*/
      
      //X = -2, Z = -2
      RightBackLeg2 = new ModelRenderer(this, 22, 95);
      RightBackLeg2.addBox(-13F, -2.1F, -6.2F, 8, 3, 3);
      RightBackLeg2.setRotationPoint(-2F, 23F, 1F);
      RightBackLeg2.setTextureSize(64, 128);
      RightBackLeg2.mirror = true;
      setRotation(RightBackLeg2, 0F, 0.7853982F, 0F);
      
      RightBackLeg3 = new ModelRenderer(this, 44, 91);
      RightBackLeg3.addBox(-14F, -2.5F, 5F, 3, 4, 6);
      RightBackLeg3.setRotationPoint(-2F, 23F, 1F);
      RightBackLeg3.setTextureSize(64, 128);
      RightBackLeg3.mirror = true;
      setRotation(RightBackLeg3, 0F, 0F, 0F);
      
      LeftMiddleLeg1 = new ModelRenderer(this, 0, 91);
      LeftMiddleLeg1.addBox(-1F, -1.1F, -1F, 9, 2, 2);
      LeftMiddleLeg1.setRotationPoint(3F, 23F, -2F);
      LeftMiddleLeg1.setTextureSize(64, 128);
      LeftMiddleLeg1.mirror = true;
      setRotation(LeftMiddleLeg1, 0F, 0.1745329F, 0F);
      RightMiddleLeg1 = new ModelRenderer(this, 0, 91);
      RightMiddleLeg1.addBox(-9F, -1.1F, -1F, 9, 2, 2);
      RightMiddleLeg1.setRotationPoint(-3F, 23F, -2F);
      RightMiddleLeg1.setTextureSize(64, 128);
      RightMiddleLeg1.mirror = true;
      setRotation(RightMiddleLeg1, 0F, -0.1745329F, 0F);
      LeftMiddleLeg2 = new ModelRenderer(this, 22, 92);
      LeftMiddleLeg2.addBox(0F, -1.1F, -0.5F, 6, 2, 1);
      LeftMiddleLeg2.setRotationPoint(2F, 23F, -4F);
      LeftMiddleLeg2.setTextureSize(64, 128);
      LeftMiddleLeg2.mirror = true;
      setRotation(LeftMiddleLeg2, 0F, 0.1919862F, 0F);
      RightMiddleLeg2 = new ModelRenderer(this, 22, 92);
      RightMiddleLeg2.addBox(-6F, -1.1F, -0.5F, 6, 2, 1);
      RightMiddleLeg2.setRotationPoint(-2F, 23F, -4F);
      RightMiddleLeg2.setTextureSize(64, 128);
      RightMiddleLeg2.mirror = true;
      setRotation(RightMiddleLeg2, 0F, -0.1919862F, 0F);
      RightArm1 = new ModelRenderer(this, 0, 101);
      RightArm1.addBox(-1F, -1.1F, -7F, 2, 2, 7);
      RightArm1.setRotationPoint(-2F, 23F, -5F);
      RightArm1.setTextureSize(64, 128);
      RightArm1.mirror = true;
      setRotation(RightArm1, 0F, 0.7853982F, 0F);
      LeftArm1 = new ModelRenderer(this, 0, 101);
      LeftArm1.addBox(-1F, -1.1F, -7F, 2, 2, 7);
      LeftArm1.setRotationPoint(2F, 23F, -5F);
      LeftArm1.setTextureSize(64, 128);
      LeftArm1.mirror = true;
      setRotation(LeftArm1, 0F, -0.7853982F, 0F);
      RightArm2 = new ModelRenderer(this, 0, 110);
      RightArm2.addBox(-2.7F, -1.5F, -15F, 3, 3, 9);
      RightArm2.setRotationPoint(-2F, 23F, -5F);
      RightArm2.setTextureSize(64, 128);
      RightArm2.mirror = true;
      setRotation(RightArm2, 0F, 0.5759587F, 0F);
      LeftArm2 = new ModelRenderer(this, 0, 110);
      LeftArm2.addBox(-0.3F, -1.5F, -15F, 3, 3, 9);
      LeftArm2.setRotationPoint(2F, 23F, -5F);
      LeftArm2.setTextureSize(64, 128);
      LeftArm2.mirror = true;
      setRotation(LeftArm2, 0F, -0.5759587F, 0F);
      RightArm3 = new ModelRenderer(this, 40, 0);
      RightArm3.addBox(-10F, -1.4F, -20.56F, 2, 3, 10);
      RightArm3.setRotationPoint(-2F, 23F, -5F);
      RightArm3.setTextureSize(64, 128);
      RightArm3.mirror = true;
      setRotation(RightArm3, 0F, 0F, 0F);
      LeftArm3 = new ModelRenderer(this, 40, 0);
      LeftArm3.addBox(8F, -1.4F, -20.6F, 2, 3, 10);
      LeftArm3.setRotationPoint(2F, 23F, -5F);
      LeftArm3.setTextureSize(64, 128);
      LeftArm3.mirror = true;
      setRotation(LeftArm3, 0F, 0F, 0F);
      RightArmthin = new ModelRenderer(this, 10, 15);
      RightArmthin.addBox(-8F, 0F, -20F, 7, 0, 12);
      RightArmthin.setRotationPoint(-2F, 23F, -5F);
      RightArmthin.setTextureSize(64, 128);
      RightArmthin.mirror = true;
      setRotation(RightArmthin, 0F, 0F, 0F);
      LeftArmthin = new ModelRenderer(this, 27, 15);
      LeftArmthin.addBox(1F, 0F, -20F, 7, 0, 12);
      LeftArmthin.setRotationPoint(2F, 23F, -5F);
      LeftArmthin.setTextureSize(64, 128);
      LeftArmthin.mirror = true;
      setRotation(LeftArmthin, 0F, 0F, 0F);
      Anttena = new ModelRenderer(this, 24, 0);
      Anttena.addBox(-1.5F, 0F, -5F, 3, 0, 5);
      Anttena.setRotationPoint(0F, 23F, -6F);
      Anttena.setTextureSize(64, 128);
      Anttena.mirror = true;
      setRotation(Anttena, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    head.render(f5);
    body1.render(f5);
    body2.render(f5);
    body3.render(f5);
    body4.render(f5);
    tail.render(f5);
    tail2.render(f5);
    LeftBackLeg1.render(f5);
    LeftBackLeg2.render(f5);
    LeftBackLeg3.render(f5);
    RightBackLeg1.render(f5);
    RightBackLeg2.render(f5);
    RightBackLeg3.render(f5);
    LeftMiddleLeg1.render(f5);
    RightMiddleLeg1.render(f5);
    LeftMiddleLeg2.render(f5);
    RightMiddleLeg2.render(f5);
    RightArm1.render(f5);
    LeftArm1.render(f5);
    RightArm2.render(f5);
    LeftArm2.render(f5);
    RightArm3.render(f5);
    LeftArm3.render(f5);
    RightArmthin.render(f5);
    LeftArmthin.render(f5);
    Anttena.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    
    this.body2.rotateAngleX = 0.2F * MathHelper.cos(f2 * (float)0.35F + f1);
    this.body3.rotateAngleX = this.body2.rotateAngleX;
    this.body4.rotateAngleX = this.body2.rotateAngleX;
    this.tail.rotateAngleX = this.body2.rotateAngleX;
    this.tail2.rotateAngleX = this.body2.rotateAngleX;
    
    this.LeftMiddleLeg1.rotateAngleY= -0.2F * MathHelper.sin(f2 * (float)0.35F + f1);
    this.RightMiddleLeg1.rotateAngleY= 0.2F * MathHelper.sin(f2 * (float)0.35F + f1);
    this.LeftMiddleLeg2.rotateAngleY= -0.2F * MathHelper.sin(f2 * (float)0.35F + f1);
    this.RightMiddleLeg2.rotateAngleY= 0.2F * MathHelper.sin(f2 * (float)0.35F + f1);

    this.RightBackLeg1.rotateAngleY = 0.2F * MathHelper.sin(f2 * (float)0.35F + f1);
    this.LeftBackLeg1.rotateAngleY = -0.2F * MathHelper.sin(f2 * (float)0.35F + f1);

    this.RightBackLeg2.rotateAngleY = this.RightBackLeg1.rotateAngleY + 0.7853982F;
    this.RightBackLeg3.rotateAngleY = this.RightBackLeg1.rotateAngleY;
    
    this.LeftBackLeg2.rotateAngleY = this.LeftBackLeg1.rotateAngleY +  -0.7853982F;
    this.LeftBackLeg3.rotateAngleY = this.LeftBackLeg1.rotateAngleY;

  }

}

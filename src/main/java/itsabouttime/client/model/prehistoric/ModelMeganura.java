// Date: 11/22/2014 11:47:40 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package itsabouttime.client.model.prehistoric;

import itsabouttime.common.entities.prehistoric.EntityBrontoscorpio;
import itsabouttime.common.entities.prehistoric.EntityMeganura;
import itsabouttime.common.entities.prehistoric.EntityVelociraptor;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.util.MathHelper;

public class ModelMeganura extends ModelBase
{
  //fields
    ModelRenderer LeftEye;
    ModelRenderer RightEye;
    ModelRenderer Tail;
    ModelRenderer Head;
    ModelRenderer Body;
    ModelRenderer LeftLegBack;
    ModelRenderer RightLegBack;
    ModelRenderer LeftLegMiddle;
    ModelRenderer RightLegMiddle;
    ModelRenderer LeftLegFront;
    ModelRenderer RightLegFront;
    ModelRenderer RightFrontWing;
    ModelRenderer LeftFrontWing;
    ModelRenderer RightBackWing;
    ModelRenderer LeftBackWing;
  
  public ModelMeganura()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      LeftEye = new ModelRenderer(this, 0, 8);
      LeftEye.addBox(-1F, -2F, -2F, 2, 2, 2);
      LeftEye.setRotationPoint(2F, 19.5F, -7F);
      LeftEye.setTextureSize(64, 32);
      LeftEye.mirror = true;
      setRotation(LeftEye, 0F, 0F, 0F);
      RightEye = new ModelRenderer(this, 0, 13);
      RightEye.addBox(-1F, -2F, -2F, 2, 2, 2);
      RightEye.setRotationPoint(-2F, 19.5F, -7F);
      RightEye.setTextureSize(64, 32);
      RightEye.mirror = true;
      setRotation(RightEye, 0F, 0F, 0F);
      Tail = new ModelRenderer(this, 29, 12);
      Tail.addBox(-1.5F, -1.5F, 0F, 3, 3, 8);
      Tail.setRotationPoint(0F, 19.5F, 2F);
      Tail.setTextureSize(64, 32);
      Tail.mirror = true;
      setRotation(Tail, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 0, 0);
      Head.addBox(-2F, -1.5F, -4F, 4, 3, 4);
      Head.setRotationPoint(0F, 19.5F, -4F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Body = new ModelRenderer(this, 6, 12);
      Body.addBox(-2.5F, -2F, 0F, 5, 4, 6);
      Body.setRotationPoint(0F, 19.5F, -4F);
      Body.setTextureSize(64, 32);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      LeftLegBack = new ModelRenderer(this, 60, 0);
      LeftLegBack.addBox(-0.5F, 0F, -0.5F, 1, 5, 1);
      LeftLegBack.setRotationPoint(2F, 19.5F, 1F);
      LeftLegBack.setTextureSize(64, 32);
      LeftLegBack.mirror = true;
      setRotation(LeftLegBack, 0F, -0.5235988F, -0.5235988F);
      RightLegBack = new ModelRenderer(this, 60, 0);
      RightLegBack.addBox(-0.5F, 0F, -0.5F, 1, 5, 1);
      RightLegBack.setRotationPoint(-2F, 19.5F, 1F);
      RightLegBack.setTextureSize(64, 32);
      RightLegBack.mirror = true;
      setRotation(RightLegBack, 0F, 0.5235988F, 0.5235988F);
      LeftLegMiddle = new ModelRenderer(this, 60, 0);
      LeftLegMiddle.addBox(-0.5F, 0F, -0.5F, 1, 5, 1);
      LeftLegMiddle.setRotationPoint(2F, 19.5F, -1F);
      LeftLegMiddle.setTextureSize(64, 32);
      LeftLegMiddle.mirror = true;
      setRotation(LeftLegMiddle, 0F, 0F, -0.5235988F);
      RightLegMiddle = new ModelRenderer(this, 60, 0);
      RightLegMiddle.addBox(-0.5F, 0F, -0.5F, 1, 5, 1);
      RightLegMiddle.setRotationPoint(-2F, 19.5F, -1F);
      RightLegMiddle.setTextureSize(64, 32);
      RightLegMiddle.mirror = true;
      setRotation(RightLegMiddle, 0F, 0F, 0.5235988F);
      LeftLegFront = new ModelRenderer(this, 60, 0);
      LeftLegFront.addBox(-0.5F, 0F, -0.5F, 1, 5, 1);
      LeftLegFront.setRotationPoint(2F, 19.5F, -3F);
      LeftLegFront.setTextureSize(64, 32);
      LeftLegFront.mirror = true;
      setRotation(LeftLegFront, 0F, 0.5235988F, -0.5235988F);
      RightLegFront = new ModelRenderer(this, 60, 0);
      RightLegFront.addBox(-0.5F, 0F, -0.5F, 1, 5, 1);
      RightLegFront.setRotationPoint(-2F, 19.5F, -3F);
      RightLegFront.setTextureSize(64, 32);
      RightLegFront.mirror = true;
      setRotation(RightLegFront, 0F, -0.5235988F, 0.5235988F);
      RightFrontWing = new ModelRenderer(this, 0, 28);
      RightFrontWing.addBox(-12F, 0F, 0F, 12, 0, 4);
      RightFrontWing.setRotationPoint(0F, 18F, -3.2F);
      RightFrontWing.setTextureSize(64, 32);
      RightFrontWing.mirror = true;
      setRotation(RightFrontWing, 0F, -0.4014257F, 0F);
      LeftFrontWing = new ModelRenderer(this, 0, 28);
      LeftFrontWing.addBox(0F, 0F, 0F, 12, 0, 4);
      LeftFrontWing.setRotationPoint(0F, 18F, -3.2F);
      LeftFrontWing.setTextureSize(64, 32);
      LeftFrontWing.mirror = true;
      setRotation(LeftFrontWing, 0F, 0.4014257F, 0F);
      RightBackWing = new ModelRenderer(this, 27, 0);
      RightBackWing.addBox(-9F, 0F, 0F, 9, 0, 4);
      RightBackWing.setRotationPoint(-1.8F, 18.1F, -2.2F);
      RightBackWing.setTextureSize(64, 32);
      RightBackWing.mirror = true;
      setRotation(RightBackWing, 0F, 0.2617994F, 0F);
      LeftBackWing = new ModelRenderer(this, 27, 0);
      LeftBackWing.addBox(0F, 0F, 0F, 9, 0, 4);
      LeftBackWing.setRotationPoint(1.76F, 18.1F, -2.2F);
      LeftBackWing.setTextureSize(64, 32);
      LeftBackWing.mirror = true;
      setRotation(LeftBackWing, 0F, -0.2617994F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);

    LeftEye.render(f5);
    RightEye.render(f5);
    Tail.render(f5);
    Head.render(f5);
    Body.render(f5);
    LeftLegBack.render(f5);
    RightLegBack.render(f5);
    LeftLegMiddle.render(f5);
    RightLegMiddle.render(f5);
    LeftLegFront.render(f5);
    RightLegFront.render(f5);
    RightFrontWing.render(f5);
    LeftFrontWing.render(f5);
    RightBackWing.render(f5);
    LeftBackWing.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  
    	  

  }
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
      EntityMeganura b = (EntityMeganura)entity;

    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    if (!b.getIsBatHanging())
    {
  	  this.LeftFrontWing.rotateAngleZ= -0.4F * MathHelper.sin(f1 * (float)1F + f2);
        this.RightFrontWing.rotateAngleZ= 0.4F * MathHelper.sin(f1 * (float)1F + f2);
        this.LeftBackWing.rotateAngleZ= -0.4F * MathHelper.sin(f1 * (float)1F + f2);
        this.RightBackWing.rotateAngleZ= 0.4F * MathHelper.sin(f1 * (float)1F + f2);
        setRotation(LeftLegBack, 0.5235988F, 0F, -0.4363323F);
        setRotation(RightLegBack, 0.5235988F, 0F, 0.4363323F);
        setRotation(LeftLegMiddle, 0.5235988F, 0F, -0.4014257F);
        setRotation(RightLegMiddle, 0.5235988F, 0F, 0.4014257F);
        setRotation(LeftLegFront, 0.5235988F, 0F, -0.2617994F);
        setRotation(RightLegFront, 0.5235988F, 0F, 0.2617994F);
    }else{
    }
    }
  }



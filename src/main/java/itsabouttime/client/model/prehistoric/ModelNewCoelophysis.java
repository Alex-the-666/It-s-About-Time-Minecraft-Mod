// Date: 11/26/2014 9:03:42 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package itsabouttime.client.model.prehistoric;

import thehippomaster.AnimationAPI.IAnimatedEntity;
import thehippomaster.AnimationAPI.client.Animator;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelNewCoelophysis extends ModelBase
{
    private Animator animator;

	public static final float PI = (float)Math.PI;

  //fields
    ModelRenderer UpperJaw;
    ModelRenderer LowerJaw;
    ModelRenderer Head;
    ModelRenderer Neck2;
    ModelRenderer Neck1;
    ModelRenderer Body;
    ModelRenderer RightArm;
    ModelRenderer LeftArm;
    ModelRenderer RightHand;
    ModelRenderer LeftHand;
    ModelRenderer RightThigh;
    ModelRenderer LeftThigh;
    ModelRenderer RightLeg;
    ModelRenderer LeftLeg;
    ModelRenderer RightAnkle;
    ModelRenderer LeftAnkle;
    ModelRenderer RightFoot;
    ModelRenderer LeftFoot;
    ModelRenderer Tail1;
    ModelRenderer Tail2;
    ModelRenderer Tail3;
  
  public ModelNewCoelophysis()
  {
    textureWidth = 64;
    textureHeight = 64;
    
      UpperJaw = new ModelRenderer(this, 50, 33);
      UpperJaw.addBox(-1.5F, -1F, -4F, 3, 2, 4);
      UpperJaw.setRotationPoint(0F, -0.5F, -17.8F);
      UpperJaw.setTextureSize(64, 64);
      UpperJaw.mirror = true;
      setRotation(UpperJaw, 0.1570796F, 0F, 0F);
      LowerJaw = new ModelRenderer(this, 52, 40);
      LowerJaw.addBox(-1F, -0.5F, -4F, 2, 1, 4);
      LowerJaw.setRotationPoint(0F, 1F, -17F);
      LowerJaw.setTextureSize(64, 64);
      LowerJaw.mirror = true;
      setRotation(LowerJaw, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 46, 23);
      Head.addBox(-2F, -2F, -4.573333F, 4, 4, 5);
      Head.setRotationPoint(0F, 0F, -13.5F);
      Head.setTextureSize(64, 64);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Neck2 = new ModelRenderer(this, 44, 12);
      Neck2.addBox(-1.5F, -1.5F, -7F, 3, 3, 7);
      Neck2.setRotationPoint(0F, 5.5F, -8F);
      Neck2.setTextureSize(64, 64);
      Neck2.mirror = true;
      Neck1 = new ModelRenderer(this, 42, 0);
      Neck1.addBox(-2F, -2F, -7F, 4, 4, 7);
      Neck1.setRotationPoint(0F, 6F, -2F);
      Neck1.setTextureSize(64, 64);
      Neck1.mirror = true;
      setRotation(Neck1, -0.6108652F, 0F, 0F);
      Body = new ModelRenderer(this, 0, 44);
      Body.addBox(-3F, -3F, 0F, 6, 6, 14);
      Body.setRotationPoint(0F, 7F, -4F);
      Body.setTextureSize(64, 64);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      RightArm = new ModelRenderer(this, 33, 0);
      RightArm.addBox(-2F, -1F, -1F, 2, 6, 2);
      RightArm.setRotationPoint(-3F, 8F, -2F);
      RightArm.setTextureSize(64, 64);
      RightArm.mirror = true;
      setRotation(RightArm, 0.2443461F, 0F, 0F);
      LeftArm = new ModelRenderer(this, 33, 0);
      LeftArm.addBox(0F, -1F, -1F, 2, 6, 2);
      LeftArm.setRotationPoint(3F, 8F, -2F);
      LeftArm.setTextureSize(64, 64);
      LeftArm.mirror = true;
      setRotation(LeftArm, 0.2443461F, 0F, 0F);
      RightHand = new ModelRenderer(this, 24, 0);
      RightHand.addBox(-1F, 0F, -1F, 2, 6, 2);
      RightHand.setRotationPoint(-4.1F, 12F, -0.5F);
      RightHand.setTextureSize(64, 64);
      RightHand.mirror = true;
      setRotation(RightHand, -0.7853982F, 0F, 0.0174533F);
      LeftHand = new ModelRenderer(this, 24, 0);
      LeftHand.addBox(-1F, 0F, -1F, 2, 6, 2);
      LeftHand.setRotationPoint(4.1F, 12F, -0.5F);
      LeftHand.setTextureSize(64, 64);
      LeftHand.mirror = true;
      setRotation(LeftHand, -0.7853982F, 0F, 0F);
      RightThigh = new ModelRenderer(this, 24, 10);
      RightThigh.addBox(-3F, -2F, -2F, 3, 7, 4);
      RightThigh.setRotationPoint(-3F, 7F, 6F);
      RightThigh.setTextureSize(64, 64);
      RightThigh.mirror = true;
      setRotation(RightThigh, -0.4363323F, 0F, 0F);
      LeftThigh = new ModelRenderer(this, 24, 10);
      LeftThigh.addBox(0F, -2F, -2F, 3, 7, 4);
      LeftThigh.setRotationPoint(3F, 7F, 6F);
      LeftThigh.setTextureSize(64, 64);
      LeftThigh.mirror = true;
      setRotation(LeftThigh, -0.4363323F, 0F, 0F);
      RightLeg = new ModelRenderer(this, 24, 22);
      RightLeg.addBox(-1F, 0F, -1.5F, 2, 7, 3);
      RightLeg.setRotationPoint(-4.5F, 10F, 4F);
      RightLeg.setTextureSize(64, 64);
      RightLeg.mirror = true;
      setRotation(RightLeg, 0.5061455F, 0F, 0F);
      LeftLeg = new ModelRenderer(this, 24, 22);
      LeftLeg.addBox(-1F, 0F, -1.5F, 2, 7, 3);
      LeftLeg.setRotationPoint(4.5F, 10F, 4F);
      LeftLeg.setTextureSize(64, 64);
      LeftLeg.mirror = true;
      setRotation(LeftLeg, 0.5061455F, 0F, 0F);
      RightAnkle = new ModelRenderer(this, 26, 33);
      RightAnkle.addBox(-1F, 0F, -1F, 2, 8, 2);
      RightAnkle.setRotationPoint(-4.4F, 15F, 7.5F);
      RightAnkle.setTextureSize(64, 64);
      RightAnkle.mirror = true;
      setRotation(RightAnkle, -0.3490659F, 0F, 0F);
      LeftAnkle = new ModelRenderer(this, 26, 33);
      LeftAnkle.addBox(-1F, 0F, -1F, 2, 8, 2);
      LeftAnkle.setRotationPoint(4.4F, 15F, 7.5F);
      LeftAnkle.setTextureSize(64, 64);
      LeftAnkle.mirror = true;
      setRotation(LeftAnkle, -0.3490659F, 0F, 0F);
      RightFoot = new ModelRenderer(this, 0, 0);
      RightFoot.addBox(-1.5F, 0F, -4F, 3, 2, 5);
      RightFoot.setRotationPoint(-4.373333F, 22F, 5F);
      RightFoot.setTextureSize(64, 64);
      RightFoot.mirror = true;
      setRotation(RightFoot, 0F, 0F, 0F);
      LeftFoot = new ModelRenderer(this, 0, 0);
      LeftFoot.addBox(-1.5F, 0F, -4F, 3, 2, 5);
      LeftFoot.setRotationPoint(4.4F, 22F, 5F);
      LeftFoot.setTextureSize(64, 64);
      LeftFoot.mirror = true;
      setRotation(LeftFoot, 0F, 0F, 0F);
      Tail1 = new ModelRenderer(this, 0, 31);
      Tail1.addBox(-2F, -2F, 0F, 4, 4, 8);
      Tail1.setRotationPoint(0F, 7F, 10F);
      Tail1.setTextureSize(64, 64);
      Tail1.mirror = true;
      setRotation(Tail1, 0F, 0F, 0F);
      Tail2 = new ModelRenderer(this, 0, 21);
      Tail2.addBox(-1.5F, -1.5F, 0F, 3, 3, 6);
      Tail2.setRotationPoint(0F, 7F, 18F);
      Tail2.setTextureSize(64, 64);
      Tail2.mirror = true;
      setRotation(Tail2, 0F, 0F, 0F);
      Tail3 = new ModelRenderer(this, 0, 9);
      Tail3.addBox(-1F, -1F, 0F, 2, 2, 9);
      Tail3.setRotationPoint(0F, 7F, 24F);
      Tail3.setTextureSize(64, 64);
      Tail3.mirror = true;
      setRotation(Tail3, 0F, 0F, 0F);
	  animator = new Animator(this);
this.convertToChild(Head, UpperJaw);
this.convertToChild(Head, LowerJaw);
this.convertToChild(Neck2, Head);
this.convertToChild(Neck1, Neck2);

this.convertToChild(RightArm, RightHand);
this.convertToChild(LeftArm, LeftHand);

this.convertToChild(RightAnkle, RightFoot);
this.convertToChild(RightLeg, RightAnkle);
this.convertToChild(RightThigh, RightLeg);

this.convertToChild(LeftAnkle, LeftFoot);
this.convertToChild(LeftLeg, LeftAnkle);
this.convertToChild(LeftThigh, LeftLeg);

this.convertToChild(Tail2, Tail3);
this.convertToChild(Tail1, Tail2);
this.convertToChild(Body, Tail1);

  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
	animate((IAnimatedEntity)entity, f, f1, f2, f3, f4, f5);
	setRotationAngles(f, f1, f2, f3, f4, f5, entity);

    Neck1.render(f5);
    Body.render(f5);
    RightArm.render(f5);
    LeftArm.render(f5);
    RightThigh.render(f5);
    LeftThigh.render(f5);
    

  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  protected void convertToChild(ModelRenderer parParent, ModelRenderer parChild)
  {
     // move child rotation point to be relative to parent
     parChild.rotationPointX -= parParent.rotationPointX;
     parChild.rotationPointY -= parParent.rotationPointY;
     parChild.rotationPointZ -= parParent.rotationPointZ;
     // make rotations relative to parent
     parChild.rotateAngleX -= parParent.rotateAngleX;
     parChild.rotateAngleY -= parParent.rotateAngleY;
     parChild.rotateAngleZ -= parParent.rotateAngleZ;
     // create relationship
     parParent.addChild(parChild);
  } 
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
  super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);


  }
  public void setAngles() {
	  //TODO\
Neck2.rotateAngleX= 0.296706F;
Neck1.rotateAngleX=  -0.6108652F;
	}
 
	public void animate(IAnimatedEntity entity, float f, float f1, float f2, float f3, float f4, float f5) {


		animator.update(entity);
		setAngles();
		


	}
	
	
}



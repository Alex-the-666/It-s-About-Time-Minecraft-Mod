// Date: 9/10/2014 7:12:20 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package itsabouttime.client.model.prehistoric;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelWaptia extends ModelBase
{
  //fields
    ModelRenderer shellLeft;
    ModelRenderer shellRight;
    ModelRenderer spine;
    ModelRenderer head;
    ModelRenderer antennaright;
    ModelRenderer antennaleft;
    ModelRenderer LegLeft;
    ModelRenderer LegRight;
    ModelRenderer Tail1;
    ModelRenderer Tail2;
    ModelRenderer Tail3;
    ModelRenderer Tail4;
  
  public ModelWaptia()
  {
    textureWidth = 64;
    textureHeight = 64;
    
      shellLeft = new ModelRenderer(this, 0, 54);
      shellLeft.addBox(-0.5F, 0F, 0F, 1, 4, 6);
      shellLeft.setRotationPoint(0F, 20F, -5F);
      shellLeft.setTextureSize(64, 64);
      shellLeft.mirror = true;
      setRotation(shellLeft, 0F, 0F, -0.7853982F);
      shellRight = new ModelRenderer(this, 0, 44);
      shellRight.addBox(-0.5F, 0F, 0F, 1, 4, 6);
      shellRight.setRotationPoint(0F, 20F, -5F);
      shellRight.setTextureSize(64, 64);
      shellRight.mirror = true;
      setRotation(shellRight, 0F, 0F, 0.7853982F);
      spine = new ModelRenderer(this, 0, 36);
      spine.addBox(-1.5F, -1F, 0F, 3, 2, 6);
      spine.setRotationPoint(0F, 20.5F, -5F);
      spine.setTextureSize(64, 64);
      spine.mirror = true;
      setRotation(spine, 0F, 0F, 0F);
      head = new ModelRenderer(this, 0, 33);
      head.addBox(-1.5F, -0.2F, -1F, 3, 2, 1);
      head.setRotationPoint(0F, 20F, -5F);
      head.setTextureSize(64, 64);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      antennaright = new ModelRenderer(this, 0, 28);
      antennaright.addBox(-0.5F, 0F, -5F, 1, 0, 5);
      antennaright.setRotationPoint(-1F, 20F, -5.8F);
      antennaright.setTextureSize(64, 64);
      antennaright.mirror = true;
      setRotation(antennaright, -0.2094395F, 0.2792527F, 0F);
      antennaleft = new ModelRenderer(this, 0, 28);
      antennaleft.addBox(-0.5F, 0F, -5F, 1, 0, 5);
      antennaleft.setRotationPoint(1F, 20F, -5.8F);
      antennaleft.setTextureSize(64, 64);
      antennaleft.mirror = true;
      setRotation(antennaleft, -0.2094395F, -0.2792527F, 0F);
      LegLeft = new ModelRenderer(this, 0, 20);
      LegLeft.addBox(0F, 0F, 0F, 0, 2, 6);
      LegLeft.setRotationPoint(2F, 22F, -5F);
      LegLeft.setTextureSize(64, 64);
      LegLeft.mirror = true;
      setRotation(LegLeft, 0F, 0F, 0F);
      LegRight = new ModelRenderer(this, 0, 20);
      LegRight.addBox(0F, 0F, 0F, 0, 2, 6);
      LegRight.setRotationPoint(-2F, 22F, -5F);
      LegRight.setTextureSize(64, 64);
      LegRight.mirror = true;
      setRotation(LegRight, 0F, 0F, 0F);
      Tail1 = new ModelRenderer(this, 0, 14);
      Tail1.addBox(-1.5F, -1.5F, 0F, 3, 3, 3);
      Tail1.setRotationPoint(0F, 21F, 1F);
      Tail1.setTextureSize(64, 64);
      Tail1.mirror = true;
      setRotation(Tail1, 0F, 0F, 0F);
      Tail2 = new ModelRenderer(this, 0, 8);
      Tail2.addBox(-1.5F, -1.5F, 3F, 3, 2, 4);
      Tail2.setRotationPoint(0F, 21F, 1F);
      Tail2.setTextureSize(64, 64);
      Tail2.mirror = true;
      setRotation(Tail2, 0F, 0F, 0F);
      Tail3 = new ModelRenderer(this, 0, 4);
      Tail3.addBox(-1F, -1.48F, 7F, 2, 1, 3);
      Tail3.setRotationPoint(0F, 21F, 1F);
      Tail3.setTextureSize(64, 64);
      Tail3.mirror = true;
      setRotation(Tail3, 0F, 0F, 0F);
      Tail4 = new ModelRenderer(this, 39, 0);
      Tail4.addBox(-5F, -1F, 8F, 10, 0, 5);
      Tail4.setRotationPoint(0F, 21F, 1F);
      Tail4.setTextureSize(64, 64);
      Tail4.mirror = true;
      setRotation(Tail4, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    shellLeft.render(f5);
    shellRight.render(f5);
    spine.render(f5);
    head.render(f5);
    antennaright.render(f5);
    antennaleft.render(f5);
    LegLeft.render(f5);
    LegRight.render(f5);
    Tail1.render(f5);
    Tail2.render(f5);
    Tail3.render(f5);
    Tail4.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	  this.Tail1.rotateAngleX = 0.2F * MathHelper.sin(f2 * (float)0.15F + f1);
	  this.Tail2.rotateAngleX =Tail1.rotateAngleX;
	  this.Tail3.rotateAngleX=Tail1.rotateAngleX;
	  this.Tail4.rotateAngleX = 0.2F * MathHelper.sin(f2 * (float)0.15F + f1);
  }

public void renderModel(float f5) {
	 shellLeft.render(f5);
	    shellRight.render(f5);
	    spine.render(f5);
	    head.render(f5);
	    antennaright.render(f5);
	    antennaleft.render(f5);
	    LegLeft.render(f5);
	    LegRight.render(f5);
	    Tail1.render(f5);
	    Tail2.render(f5);
	    Tail3.render(f5);
	    Tail4.render(f5);
}

}
